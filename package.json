{
  "name": "typescript-outline-enhancer",
  "author": "√ñndery",
  "displayName": "TS OUTLINER",
  "description": "Enhances TypeScript outline with customizable emoji icons for visibility and modifiers",
  "version": "0.0.4",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ondery/outliner.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "typescript-outline-enhancer.refresh",
        "title": "Refresh TS Outliner",
        "icon": "$(refresh)"
      },
      {
        "command": "tsOutlineEnhancer.openEmojiSettings",
        "title": "Open Emoji Settings",
        "category": "TS Outliner"
      },
      {
        "command": "tsOutlineEnhancer.openIconSettings",
        "title": "Open Icon Settings",
        "category": "TS Outliner"
      },
      {
        "command": "tsOutlineEnhancer.openFontSettings",
        "title": "Open Font Settings",
        "category": "TS Outliner"
      },
      {
        "command": "tsOutlineEnhancer.openIconAppearanceSettings",
        "title": "Open Icon Appearance Settings",
        "category": "TS Outliner"
      },
      {
        "command": "typescriptOutliner.selectFont",
        "title": "Select Font Family",
        "category": "TS Outliner",
        "icon": "$(symbol-text)"
      },
      {
        "command": "tsOutlineEnhancer.sortByPosition",
        "title": "Sort By: Position",
        "category": "TS Outliner"
      },
      {
        "command": "tsOutlineEnhancer.sortByName",
        "title": "Sort By: Name",
        "category": "TS Outliner"
      },
      {
        "command": "tsOutlineEnhancer.sortByCategory",
        "title": "Sort By: Category",
        "category": "TS Outliner"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ts-outliner",
          "title": "TS OUTLINER",
          "icon": "$(symbol-class)"
        }
      ]
    },
    "views": {
      "ts-outliner": [
        {
          "type": "webview",
          "id": "tsOutlineEnhancer.webview",
          "name": "TypeScript Enhanced Outline",
          "contextualTitle": "TS OUTLINER",
          "icon": "$(symbol-class)"
        }
      ]
    },
    "configuration": {
      "title": "TS OUTLINER",
      "properties": {
        "tsOutlineEnhancer.iconType": {
          "type": "string",
          "enum": [
            "emoji",
            "fontawesome",
            "none"
          ],
          "default": "emoji",
          "description": "Choose icon type for visibility and modifiers",
          "enumDescriptions": [
            "Use emoji icons (üåê, üîí, etc.)",
            "Use FontAwesome icons (requires FontAwesome font installed)",
            "Don't show any icons"
          ]
        },
        "tsOutlineEnhancer.fontFamily": {
          "type": "string",
          "enum": [
            "inherit",
            "Consolas, 'Courier New', monospace",
            "Fira Code, 'Courier New', monospace",
            "'JetBrains Mono', 'Courier New', monospace",
            "'Source Code Pro', 'Courier New', monospace",
            "'Cascadia Code', 'Courier New', monospace",
            "'SF Mono', Monaco, 'Courier New', monospace",
            "'Roboto Mono', 'Courier New', monospace",
            "'Ubuntu Mono', 'Courier New', monospace",
            "'Droid Sans Mono', 'Courier New', monospace",
            "'Inconsolata', 'Courier New', monospace",
            "'Monaco', 'Courier New', monospace",
            "'Menlo', 'Courier New', monospace",
            "'DejaVu Sans Mono', 'Courier New', monospace",
            "'Liberation Mono', 'Courier New', monospace",
            "'Hack', 'Courier New', monospace",
            "'Anonymous Pro', 'Courier New', monospace",
            "'Noto Sans Mono', 'Courier New', monospace",
            "'PT Mono', 'Courier New', monospace",
            "'IBM Plex Mono', 'Courier New', monospace",
            "'Victor Mono', 'Courier New', monospace",
            "'Input Mono', 'Courier New', monospace",
            "'Operator Mono', 'Courier New', monospace",
            "'Fantasque Sans Mono', 'Courier New', monospace",
            "'Lucida Console', Monaco, monospace",
            "'Courier New', Courier, monospace",
            "Arial, sans-serif",
            "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
            "'Helvetica Neue', Helvetica, Arial, sans-serif",
            "Calibri, sans-serif",
            "Tahoma, Geneva, sans-serif",
            "Verdana, Geneva, sans-serif",
            "'Trebuchet MS', 'Lucida Grande', sans-serif",
            "'Times New Roman', Times, serif",
            "Georgia, 'Times New Roman', serif",
            "Cambria, serif",
            "Constantia, serif",
            "Impact, Arial Black, sans-serif",
            "'Arial Black', Arial, sans-serif",
            "Candara, sans-serif",
            "Corbel, sans-serif"
          ],
          "enumDescriptions": [
            "Use VS Code's editor font family (Recommended)",
            "Consolas - Clean monospace font (Windows default)",
            "Fira Code - Popular programming font with ligatures",
            "JetBrains Mono - Modern programming font",
            "Source Code Pro - Adobe's programming font",
            "Cascadia Code - Microsoft's programming font",
            "SF Mono - Apple's monospace font",
            "Roboto Mono - Google's monospace font",
            "Ubuntu Mono - Ubuntu's default monospace font",
            "Droid Sans Mono - Android's monospace font",
            "Inconsolata - Popular programming font",
            "Monaco - macOS classic monospace font",
            "Menlo - macOS default terminal font",
            "DejaVu Sans Mono - Open source monospace font",
            "Liberation Mono - Open source alternative to Courier",
            "Hack - Typeface designed for source code",
            "Anonymous Pro - Clean programming font",
            "Noto Sans Mono - Google's universal monospace font",
            "PT Mono - Monospace font by ParaType",
            "IBM Plex Mono - IBM's modern monospace font",
            "Victor Mono - Programming font with cursive italics",
            "Input Mono - Font designed specifically for code",
            "Operator Mono - Premium programming font",
            "Fantasque Sans Mono - Programming font with personality",
            "Lucida Console - Windows system monospace font",
            "Courier New - Classic monospace font",
            "Arial - Clean sans-serif font",
            "Segoe UI - Windows system font",
            "Helvetica Neue - Modern sans-serif font",
            "Calibri - Microsoft Office default font",
            "Tahoma - Readable sans-serif font",
            "Verdana - Screen-optimized sans-serif font",
            "Trebuchet MS - Humanist sans-serif font",
            "Times New Roman - Classic serif font",
            "Georgia - Screen-optimized serif font",
            "Cambria - Modern serif font",
            "Constantia - Transitional serif font",
            "Impact - Bold condensed sans-serif font",
            "Arial Black - Heavy weight sans-serif font",
            "Candara - ClearType optimized sans-serif font",
            "Corbel - ClearType optimized sans-serif font"
          ],
          "default": "Consolas, 'Courier New', monospace",
          "description": "Font family for the outline view. Choose from popular programming fonts, system fonts, or use 'inherit' to match VS Code's editor font."
        },
        "tsOutlineEnhancer.fontSize": {
          "type": "number",
          "default": 13,
          "minimum": 8,
          "maximum": 30,
          "description": "Font size for the outline view (in pixels)"
        },
        "tsOutlineEnhancer.lineHeight": {
          "type": "number",
          "default": 1.2,
          "minimum": 0.8,
          "maximum": 3,
          "description": "Line height multiplier for the outline view"
        },
        "tsOutlineEnhancer.iconSize": {
          "type": "number",
          "default": 16,
          "minimum": 8,
          "maximum": 32,
          "description": "Icon size in pixels for visibility and modifier icons"
        },
        "tsOutlineEnhancer.iconSpacing": {
          "type": "number",
          "default": 4,
          "minimum": 0,
          "maximum": 20,
          "description": "Spacing between icons in pixels"
        },
        "tsOutlineEnhancer.iconToTextSpacing": {
          "type": "number",
          "default": 6,
          "minimum": 0,
          "maximum": 20,
          "description": "Spacing between icons and text in pixels"
        },
        "tsOutlineEnhancer.tooltipFontSize": {
          "type": "number",
          "default": 11,
          "minimum": 8,
          "maximum": 20,
          "description": "Font size for tooltips in pixels"
        },
        "tsOutlineEnhancer.showTooltipPrefixes": {
          "type": "boolean",
          "default": false,
          "description": "Show prefixes in tooltips (e.g., 'Type: Method' vs 'Method')"
        },
        "tsOutlineEnhancer.showIconsInLabel": {
          "type": "boolean",
          "default": true,
          "description": "Show icons in labels for visibility and modifiers (depends on iconType setting)"
        },
        "tsOutlineEnhancer.showVisibilityInLabel": {
          "type": "boolean",
          "default": false,
          "description": "Show visibility (public/private/protected) in the label"
        },
        "tsOutlineEnhancer.emojiSettings": {
          "type": "object",
          "default": {
            "public": "üåê",
            "private": "üîí",
            "protected": "üõ°Ô∏è",
            "static": "üìå",
            "readonly": "üìñ",
            "abstract": "üé≠",
            "async": "‚ö°",
            "export": "üì§",
            "default": "üåü",
            "constructor": "üèóÔ∏è",
            "property": "üìù",
            "method": "‚öôÔ∏è",
            "function": "üîß",
            "getter": "üì§",
            "setter": "üì•",
            "class": "üì¶",
            "interface": "üìã"
          },
          "properties": {
            "public": {
              "type": "string",
              "default": "üåê",
              "description": "Emoji for public members",
              "examples": [
                "üåê",
                "üü¢",
                "‚úÖ",
                "üì¢",
                "üîì",
                "üÜî",
                "üë•",
                "üì°"
              ]
            },
            "private": {
              "type": "string",
              "default": "üîí",
              "description": "Emoji for private members",
              "examples": [
                "üîí",
                "üî¥",
                "‚ùå",
                "üö´",
                "üëÅÔ∏è‚Äçüó®Ô∏è",
                "üîê",
                "üï≥Ô∏è",
                "üñ§"
              ]
            },
            "protected": {
              "type": "string",
              "default": "üõ°Ô∏è",
              "description": "Emoji for protected members",
              "examples": [
                "üõ°Ô∏è",
                "üü°",
                "‚ö†Ô∏è",
                "üî∞",
                "üõÉ",
                "üüß",
                "üî∂",
                "üß°"
              ]
            },
            "static": {
              "type": "string",
              "default": "üìå",
              "description": "Emoji for static members",
              "examples": [
                "üìå",
                "üìç",
                "üîß",
                "üèóÔ∏è",
                "üéØ",
                "üî©",
                "‚öôÔ∏è",
                "üõ†Ô∏è"
              ]
            },
            "readonly": {
              "type": "string",
              "default": "üìñ",
              "description": "Emoji for readonly members",
              "examples": [
                "üìñ",
                "üëÅÔ∏è",
                "üîç",
                "üìã",
                "üìÑ",
                "üëÄ",
                "üîé",
                "üìö"
              ]
            },
            "abstract": {
              "type": "string",
              "default": "üé≠",
              "description": "Emoji for abstract members",
              "examples": [
                "üé≠",
                "üí≠",
                "üîÆ",
                "üëª",
                "üåü",
                "üí´",
                "ü™Ñ",
                "üåÄ"
              ]
            },
            "async": {
              "type": "string",
              "default": "‚ö°",
              "description": "Emoji for async members",
              "examples": [
                "‚ö°",
                "üöÄ",
                "üîÑ",
                "‚è≥",
                "üí´",
                "üåÄ",
                "üî•",
                "‚è∞"
              ]
            },
            "export": {
              "type": "string",
              "default": "üì§",
              "description": "Emoji for exported members",
              "examples": [
                "üì§",
                "üì°",
                "üöÄ",
                "üìã",
                "üéØ",
                "üîó",
                "üì¢",
                "üåê"
              ]
            },
            "default": {
              "type": "string",
              "default": "üåü",
              "description": "Emoji for default exports",
              "examples": [
                "üåü",
                "‚≠ê",
                "üéØ",
                "üëë",
                "üíé",
                "üèÜ",
                "ü•á",
                "‚ú®"
              ]
            },
            "constructor": {
              "type": "string",
              "default": "üèóÔ∏è",
              "description": "Emoji for constructors",
              "examples": [
                "üèóÔ∏è",
                "üî®",
                "üõ†Ô∏è",
                "‚öíÔ∏è",
                "üè≠",
                "üîß",
                "‚öôÔ∏è",
                "üéØ"
              ]
            },
            "property": {
              "type": "string",
              "default": "üìù",
              "description": "Emoji for properties",
              "examples": [
                "üìù",
                "üè∑Ô∏è",
                "üìÑ",
                "üìä",
                "üíº",
                "üìÇ",
                "üóÇÔ∏è",
                "üìã"
              ]
            },
            "method": {
              "type": "string",
              "default": "‚öôÔ∏è",
              "description": "Emoji for methods",
              "examples": [
                "‚öôÔ∏è",
                "üîß",
                "üõ†Ô∏è",
                "‚öíÔ∏è",
                "üî©",
                "üéõÔ∏è",
                "üïπÔ∏è",
                "üéÆ"
              ]
            },
            "function": {
              "type": "string",
              "default": "üîß",
              "description": "Emoji for functions",
              "examples": [
                "üîß",
                "‚öôÔ∏è",
                "üõ†Ô∏è",
                "üéØ",
                "üìê",
                "üßÆ",
                "üíª",
                "üñ•Ô∏è"
              ]
            },
            "getter": {
              "type": "string",
              "default": "üì§",
              "description": "Emoji for getters",
              "examples": [
                "üì§",
                "üì°",
                "üîç",
                "üëÅÔ∏è",
                "üìä",
                "üìà",
                "üéØ",
                "üîé"
              ]
            },
            "setter": {
              "type": "string",
              "default": "üì•",
              "description": "Emoji for setters",
              "examples": [
                "üì•",
                "üì®",
                "‚úèÔ∏è",
                "‚úçÔ∏è",
                "üìù",
                "üíæ",
                "üñäÔ∏è",
                "‚úíÔ∏è"
              ]
            },
            "class": {
              "type": "string",
              "default": "üì¶",
              "description": "Emoji for classes",
              "examples": [
                "üì¶",
                "üèóÔ∏è",
                "üè¢",
                "üè≠",
                "üìö",
                "üéÅ",
                "üìã",
                "üóÉÔ∏è"
              ]
            },
            "interface": {
              "type": "string",
              "default": "üìã",
              "description": "Emoji for interfaces",
              "examples": [
                "üìã",
                "üìÑ",
                "üìú",
                "üìù",
                "üóíÔ∏è",
                "üìë",
                "üßæ",
                "üìä"
              ]
            }
          },
          "additionalProperties": false,
          "description": "Emoji settings for different TypeScript elements. Configure like editor.quickSuggestions - as an object with emoji properties."
        },
        "tsOutlineEnhancer.fontAwesomeSettings": {
          "type": "object",
          "default": {
            "public": "fas fa-globe",
            "private": "fas fa-lock",
            "protected": "fas fa-shield-alt",
            "static": "fas fa-thumbtack",
            "readonly": "fas fa-book-open",
            "abstract": "fas fa-theater-masks",
            "async": "fas fa-bolt",
            "export": "fas fa-share-square",
            "default": "fas fa-star",
            "constructor": "fas fa-hammer",
            "property": "fas fa-tag",
            "method": "fas fa-cog",
            "function": "fas fa-wrench",
            "getter": "fas fa-download",
            "setter": "fas fa-upload",
            "class": "fas fa-cube",
            "interface": "fas fa-clipboard-list"
          },
          "properties": {
            "public": {
              "type": "string",
              "default": "fas fa-globe",
              "description": "FontAwesome class for public members",
              "examples": [
                "fas fa-globe",
                "fas fa-unlock",
                "far fa-eye",
                "fas fa-users",
                "fas fa-broadcast-tower"
              ]
            },
            "private": {
              "type": "string",
              "default": "fas fa-lock",
              "description": "FontAwesome class for private members",
              "examples": [
                "fas fa-lock",
                "fas fa-user-secret",
                "far fa-eye-slash",
                "fas fa-key",
                "fas fa-ban"
              ]
            },
            "protected": {
              "type": "string",
              "default": "fas fa-shield-alt",
              "description": "FontAwesome class for protected members",
              "examples": [
                "fas fa-shield-alt",
                "fas fa-exclamation-triangle",
                "fas fa-shield-virus",
                "fas fa-user-shield"
              ]
            },
            "static": {
              "type": "string",
              "default": "fas fa-thumbtack",
              "description": "FontAwesome class for static members",
              "examples": [
                "fas fa-thumbtack",
                "fas fa-anchor",
                "fas fa-paperclip",
                "fas fa-map-pin"
              ]
            },
            "readonly": {
              "type": "string",
              "default": "fas fa-book-open",
              "description": "FontAwesome class for readonly members",
              "examples": [
                "fas fa-book-open",
                "far fa-eye",
                "fas fa-search",
                "fas fa-glasses",
                "fas fa-book"
              ]
            },
            "abstract": {
              "type": "string",
              "default": "fas fa-theater-masks",
              "description": "FontAwesome class for abstract members",
              "examples": [
                "fas fa-theater-masks",
                "fas fa-ghost",
                "fas fa-magic",
                "fas fa-cloud",
                "fas fa-puzzle-piece"
              ]
            },
            "async": {
              "type": "string",
              "default": "fas fa-bolt",
              "description": "FontAwesome class for async members",
              "examples": [
                "fas fa-bolt",
                "fas fa-rocket",
                "fas fa-spinner",
                "fas fa-clock",
                "fas fa-sync"
              ]
            },
            "export": {
              "type": "string",
              "default": "fas fa-share-square",
              "description": "FontAwesome class for exported members",
              "examples": [
                "fas fa-share-square",
                "fas fa-external-link-alt",
                "fas fa-upload",
                "fas fa-paper-plane"
              ]
            },
            "default": {
              "type": "string",
              "default": "fas fa-star",
              "description": "FontAwesome class for default exports",
              "examples": [
                "fas fa-star",
                "fas fa-crown",
                "fas fa-gem",
                "fas fa-trophy",
                "fas fa-medal"
              ]
            },
            "constructor": {
              "type": "string",
              "default": "fas fa-hammer",
              "description": "FontAwesome class for constructors",
              "examples": [
                "fas fa-hammer",
                "fas fa-tools",
                "fas fa-wrench",
                "fas fa-cogs",
                "fas fa-industry"
              ]
            },
            "property": {
              "type": "string",
              "default": "fas fa-tag",
              "description": "FontAwesome class for properties",
              "examples": [
                "fas fa-tag",
                "fas fa-tags",
                "fas fa-file-alt",
                "fas fa-clipboard",
                "fas fa-sticky-note"
              ]
            },
            "method": {
              "type": "string",
              "default": "fas fa-cog",
              "description": "FontAwesome class for methods",
              "examples": [
                "fas fa-cog",
                "fas fa-cogs",
                "fas fa-tools",
                "fas fa-wrench",
                "fas fa-sliders-h"
              ]
            },
            "function": {
              "type": "string",
              "default": "fas fa-wrench",
              "description": "FontAwesome class for functions",
              "examples": [
                "fas fa-wrench",
                "fas fa-cog",
                "fas fa-tools",
                "fas fa-calculator",
                "fas fa-desktop"
              ]
            },
            "getter": {
              "type": "string",
              "default": "fas fa-download",
              "description": "FontAwesome class for getters",
              "examples": [
                "fas fa-download",
                "fas fa-arrow-down",
                "far fa-eye",
                "fas fa-search",
                "fas fa-chart-line"
              ]
            },
            "setter": {
              "type": "string",
              "default": "fas fa-upload",
              "description": "FontAwesome class for setters",
              "examples": [
                "fas fa-upload",
                "fas fa-arrow-up",
                "fas fa-edit",
                "fas fa-pen",
                "fas fa-save"
              ]
            },
            "class": {
              "type": "string",
              "default": "fas fa-cube",
              "description": "FontAwesome class for classes",
              "examples": [
                "fas fa-cube",
                "fas fa-boxes",
                "fas fa-building",
                "fas fa-archive",
                "fas fa-package"
              ]
            },
            "interface": {
              "type": "string",
              "default": "fas fa-clipboard-list",
              "description": "FontAwesome class for interfaces",
              "examples": [
                "fas fa-clipboard-list",
                "fas fa-list-alt",
                "fas fa-file-contract",
                "fas fa-scroll",
                "fas fa-clipboard"
              ]
            }
          },
          "additionalProperties": false,
          "description": "FontAwesome icon settings for different TypeScript elements. Use FontAwesome class names like 'fas fa-globe', 'far fa-eye', etc."
        },
        "tsOutlineEnhancer.autoSelectCurrentElement": {
          "type": "boolean",
          "default": false,
          "description": "Automatically select the current element in outline when cursor moves in editor"
        },
        "tsOutlineEnhancer.autoRevealCurrentElement": {
          "type": "boolean",
          "default": false,
          "description": "Automatically reveal and focus TreeView when auto-select is active (prevents stealing focus from other panels)"
        },
        "tsOutlineEnhancer.sortMode": {
          "type": "string",
          "enum": [
            "position",
            "name",
            "category"
          ],
          "default": "position",
          "description": "Default sorting mode for TypeScript outline elements",
          "enumDescriptions": [
            "Sort by position in source code",
            "Sort alphabetically by name",
            "Sort by category (class, interface, constructor, property, method, function)"
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "typescript": "^4.9.4"
  }
}
